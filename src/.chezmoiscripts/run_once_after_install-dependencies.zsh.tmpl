#! /bin/zsh

echo "Installing Xcode command line tools..."
xcode-select --install

# Install Homebrew along with formulae and casks

echo "Installing brew..."
{{- if .user_data.run_as_admin }}
# Configure brew to download and install necessary applications
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

brew update
brew doctor

echo "Installing cli tools..."
# Install CLI apps
brew install neovim
brew install crystal
brew install direnv
brew install tree
brew install the_silver_searcher
{{- if eq .user_data.machine_type "personal" }}
# Personal clis
{{- end }}
{{- if eq .user_data.machine_type "work" }}
# Work clis
brew install awscli
{{- end }}

echo "Installing casks..."
# Install Cask apps
brew install --cask 1password
brew install --cask slack
brew install --cask firefox
brew install --cask postman
brew install --cask spotify
brew install --cask iterm2
brew install --cask docker
brew install --cask finicky
{{- if eq .user_data.machine_type "personal" }}
# Personal casks
brew install --cask discord
brew install --cask mullvadvpn
brew install --cask steam
brew install --cask vlc
brew install --cask openemu
{{- end }}
{{- if eq .user_data.machine_type "work" }}
# Work casks
brew install --cask visual-studio-code
brew install --cask google-chrome
{{- end }}
{{- end }}

# --------------------------------------------------------

echo "Configuring iTerm2..."

# iTerm 2 configuration
# Enable the python api for iterm2
defaults write com.googlecode.iterm2 EnableAPIServer 1

# Make the DynamicProfiles dir if it doesn't exist
mkdir -p ~/Library/Application\ Support/iterm2/DynamicProfiles
cp ~/.iterm2/profiles/* ~/Library/Application\ Support/iterm2/DynamicProfiles/

# Make the AutoLaunch scripts dir if it doesn't exist
mkdir -p ~/Library/Application\ Support/iterm2/Scripts/AutoLaunch
# Set the autolaunch script to set the default profile
cp ~/.iterm2/scripts/change_default_profile.py ~/Library/Application\ Support/iTerm2/Scripts/AutoLaunch

# --------------------------------------------------------

echo "Installing antidote for shell plugins..."

# Install antidote to enable shell plugins
git clone --depth=1 https://github.com/mattmc3/antidote.git ~/.zsh/.antidote

# --------------------------------------------------------

echo "Installing nvm to manage node versions..."

# Clone nvm and install the latest version of node
git clone https://github.com/nvm-sh/nvm.git ~/.nvm

# Go into the nvm repo in a subshell and checkout the latest release
(cd ~/.nvm && git checkout v0.39.5)

# Source the shell so we can install node using nvm
source ~/.zshrc

# Install latest node version
nvm install node

# Install some packages globally that are needed by nvim plugins
npm install -g typescript-language-server
npm install -g jjson
